--- MEMORY ACESS COMMANDS ---

CONSTANT

push constant i
@i
D=A
@SP
A=M
M=D
@SP
M=M+1

LOCAL, ARGUMENT, THIS, THAT

push segment address
@segment
D=M
@address
A=A+D
D=M
@SP
A=M
M=D
@SP
M=M+1
44
pop segment address
@segment
D=M
@address
D=D+A
@RANDOM
M=D
@SP
M=M-1
A=M
D=M
@RANDOM
A=M
M=D

TEMP

push temp address
@5 + address
D=M
@SP
A=M
M=D
@SP
M=M+1

pop temp address
@SP
M=M-1
@SP
A=M
D=M
@5 + address
M=D

POINTER

push pointer 0
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1

pop pointer 0
@SP
M=M-1
A=M
D=M
@THIS
M=D

STATIC

push static 12
@filename.12
D=M
@SP
A=M
M=D
@SP
M=M+1

pop static 10
@SP
M=M-1
A=M
D=M
@filename.10
M=D

--- ARITHMETIC AND LOGICAL COMMANDS ---

ADD
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M+D

SUB
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M-D

NEG
@SP
A=M
A=A-1
M=-M

NOT
@SP
A=A-1
M=!M

AND
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M

OR
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M

EQ
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@EQUALeq
D;JEQ
@SP
A=M-1
M=0
@ENDEQeq
0;JMP
(EQUALeq)
@SP
A=M-1
M=-1
(ENDEQeq)

GT
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@GREATERgt
D;JGT
@SP
A=M-1
M=0
@ENDGREATERgt
0;JMP
(GREATERgt)
@SP
A=M-1
M=-1
(ENDGREATERgt)

LT
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LESSlt
D;JLT
@SP
A=M-1
M=0
@ENDLESSlt
0;JMP
(LESSlt)
@SP
A=M-1
M=-1
(ENDLESSlt)

--- PROGRAM FLOW COMMANDS ---

IF-GOTO label
@SP
A=M-1
D=M
@label
D;JNE

GOTO label
@label
0;JMP

LABEL label
(label)
