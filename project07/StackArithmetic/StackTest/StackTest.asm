// instantiating default segments
@256
D=A
@SP
M=D
@300
D=A
@LCL
M=D
@400
D=A
@ARG
M=D
@3000
D=A
@THIS
M=D
@3010
D=A
@THAT
M=D
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@EQUAL1
D;JEQ
@SP
A=M-1
M=0
@ENDEQUAL1
0;JMP
(EQUAL1)
@SP
A=M-1
M=-1
(ENDEQUAL1)
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@EQUAL2
D;JEQ
@SP
A=M-1
M=0
@ENDEQUAL2
0;JMP
(EQUAL2)
@SP
A=M-1
M=-1
(ENDEQUAL2)
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@EQUAL3
D;JEQ
@SP
A=M-1
M=0
@ENDEQUAL3
0;JMP
(EQUAL3)
@SP
A=M-1
M=-1
(ENDEQUAL3)
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LESS1
D;JLT
@SP
A=M-1
M=0
@ENDLESS1
0;JMP
(LESS1)
@SP
A=M-1
M=-1
(ENDLESS1)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LESS2
D;JLT
@SP
A=M-1
M=0
@ENDLESS2
0;JMP
(LESS2)
@SP
A=M-1
M=-1
(ENDLESS2)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LESS3
D;JLT
@SP
A=M-1
M=0
@ENDLESS3
0;JMP
(LESS3)
@SP
A=M-1
M=-1
(ENDLESS3)
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@GREATER1
D;JGT
@SP
A=M-1
M=0
@ENDGREATER1
0;JMP
(GREATER1)
@SP
A=M-1
M=-1
(ENDGREATER1)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@GREATER2
D;JGT
@SP
A=M-1
M=0
@ENDGREATER2
0;JMP
(GREATER2)
@SP
A=M-1
M=-1
(ENDGREATER2)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@GREATER3
D;JGT
@SP
A=M-1
M=0
@ENDGREATER3
0;JMP
(GREATER3)
@SP
A=M-1
M=-1
(ENDGREATER3)
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M+D
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M-D
// neg
@SP
A=M
A=A-1
M=-M
// and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
// not
@SP
A=M
A=A-1
M=!M
(LOOP)
@LOOP
0;JMP
