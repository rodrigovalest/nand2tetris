// instantiating default segments
@256
D=A
@SP
M=D
@300
D=A
@LCL
M=D
@400
D=A
@ARG
M=D
@3000
D=A
@THIS
M=D
@3010
D=A
@THAT
M=D
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL1
D;JEQ
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL1
0;JMP
(CONDITIONALLABEL1)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL1)
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL2
D;JEQ
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL2
0;JMP
(CONDITIONALLABEL2)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL2)
// push constant 16
@16
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 17
@17
D=A
@SP
A=M
M=D
@SP
M=M+1
// eq
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL3
D;JEQ
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL3
0;JMP
(CONDITIONALLABEL3)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL3)
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL4
D;JLT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL4
0;JMP
(CONDITIONALLABEL4)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL4)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 892
@892
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL5
D;JLT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL5
0;JMP
(CONDITIONALLABEL5)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL5)
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 891
@891
D=A
@SP
A=M
M=D
@SP
M=M+1
// lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL6
D;JLT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL6
0;JMP
(CONDITIONALLABEL6)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL6)
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL7
D;JGT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL7
0;JMP
(CONDITIONALLABEL7)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL7)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32767
@32767
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL8
D;JGT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL8
0;JMP
(CONDITIONALLABEL8)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL8)
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 32766
@32766
D=A
@SP
A=M
M=D
@SP
M=M+1
// gt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@CONDITIONALLABEL9
D;JGT
@SP
A=M-1
M=0
@ENDCONDITIONALLABEL9
0;JMP
(CONDITIONALLABEL9)
@SP
A=M-1
M=-1
(ENDCONDITIONALLABEL9)
// push constant 57
@57
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 31
@31
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 53
@53
D=A
@SP
A=M
M=D
@SP
M=M+1
// add
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M+D
// push constant 112
@112
D=A
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
@SP
A=M
A=A-1
M=M-D
// neg
@SP
A=M
A=A-1
M=-M
// and
@SP
M=M-1
A=M
D=M
A=A-1
M=D&M
// push constant 82
@82
D=A
@SP
A=M
M=D
@SP
M=M+1
// or
@SP
M=M-1
A=M
D=M
A=A-1
M=D|M
// not
@SP
A=M
A=A-1
M=!M
// final loop
(FINALLOOP)
@FINALLOOP
0;JMP
